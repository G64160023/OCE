 this.getEvent();
      })
    
  }
  getEvent(){
    this.http.get(this.data.BASE_URL+"/read_event.php?id="+this.id).subscribe(data => {
      let response = data.json();
      console.log(response);
      if(response.status==200){
        this.events = response.data;
        for(let event of this.events){

        }
      console.log(event);
      }
      else alert("No Data");
    });
    //apiGet  
  }


add event
public calendar: Calendar, public data: Data, public http: Http ) {
    this.data.getData().then((data) =>
    {
      console.log(data);
      this.userData = data;
     this.id= data.id;
      })
  }
  save() {
    let input = {
      org_id: this.id,
      event_name :this.event_name,
      location: this.location,
      date_start: this.date_start, 
      date_end: this.date_end, 
      hour: this.hour,
      };
    console.log(input);
    this.http.post(this.data.BASE_URL+"/create_event.php",input).subscribe(data => {
      let response = data.json();
      console.log(response); ;
    this.calendar.createEvent(this.event_name, this.location,this.hour, new Date(this.date_start), new Date(this.date_end)).then(
      (msg) => {
        let alert = this.alertCtrl.create({
          title: 'Success!',
          subTitle: 'Event saved successfully',
          buttons: ['OK']
        });
        alert.present();
        this.navCtrl.pop();
      },
      (err) => {
        let alert = this.alertCtrl.create({
          title: 'Failed!',
          subTitle: err,
          buttons: ['OK']
        });
        alert.present();
      }
    );
    });
  }









import { Component } from '@angular/core';
import { NavController, AlertController, NavParams, LoadingController, ModalController } from 'ionic-angular';
import { Calendar } from '@ionic-native/calendar';
import{ AddeventPage} from '../addevent/addevent';
import { Data } from '../../provider/data';
import { Http } from '@angular/http';
import * as moment from 'moment';
@Component({
  selector: 'page-homepage',
  templateUrl: 'homepage.html'
})
export class HomePage {

  eventSource = [];
  viewTitle: string;
  selectedDay = new Date();
 id:any;
 events:any;
  calendar = {
    mode: 'month',
    currentDate: new Date()
  };
  
  constructor(public navCtrl: NavController, private modalCtrl: ModalController, private alertCtrl: AlertController, public data:Data, public http:Http) {
   this.data.getData().then((data) =>
    {
      console.log(data);
      this.userData = data;
      this.id= data.id;
      this.getEvent();
      })
   }
   getEvent(){
    this.http.get(this.data.BASE_URL+"/read_event.php?id="+this.id).subscribe(data => {
      let response = data.json();
      console.log(response);
      if(response.status==200){
        this.events = response.data;
        for(let event of this.events){

        }
      console.log(event);
      }
      else alert("No Data");
    });
    //apiGet  
  }
  addEvent() {
    let modal = this.modalCtrl.create(AddeventPage, {selectedDay: this.selectedDay});
    modal.present();
    modal.onDidDismiss(data => {
      if (data) {
        let eventData = data;
 
        eventData.startTime = new Date(data.startTime);
        eventData.endTime = new Date(data.endTime);
 
        let events = this.eventSource;
        events.push(eventData);
        this.eventSource = [];
        setTimeout(() => {
          this.eventSource = events;
        });
      }
    });
  }
 
  onViewTitleChanged(title) {
    this.viewTitle = title;
  }
 
  onEventSelected(event) {
    let start = moment(event.startTime).format('LLLL');
    let end = moment(event.endTime).format('LLLL');
    
    let alert = this.alertCtrl.create({
      title: '' + event.title,
      subTitle: 'From: ' + start + '<br>To: ' + end,
      buttons: ['OK']
    })
    alert.present();
  }
 
  onTimeSelected(ev) {
    this.selectedDay = ev.selectedTime;
  }
}